{"version":3,"sources":["../api/index.js"],"names":["PORT","process","env","app","use","dias","horarios","then","response","get","req","res","status","send","dia","params","includes","toLowerCase","horariosFiltrados","filter","horario","listen","console","log"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEA,IAAIG,GAAG,GAAG,0BAAV;AACAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AAEA,IAAMC,IAAI,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,OAAzC,CAAb;AAEA,IAAIC,QAAJ;AACA,iCAAgBC,IAAhB,CAAqB,UAAAC,QAAQ;AAAA,SAAIF,QAAQ,GAAGE,QAAf;AAAA,CAA7B;AAEAL,GAAG,CAACM,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,QAArB;AACD,CAFD;AAIAH,GAAG,CAACM,GAAJ,CAAQ,gBAAR,EAA0B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACtC,MAAIG,GAAG,GAAGJ,GAAG,CAACK,MAAJ,CAAWD,GAArB;;AAEA,MAAIA,GAAG,IAAIT,IAAI,CAACW,QAAL,CAAcF,GAAG,CAACG,WAAJ,EAAd,CAAX,EAA6C;AAC3C,QAAIC,iBAAiB,GAAGZ,QAAQ,CAACa,MAAT,CAAgB,UAACC,OAAD,EAAa;AACnD,UAAIA,OAAO,CAACA,OAAR,CAAgBN,GAAhB,KAAwBA,GAA5B,EAAiC,OAAOM,OAAP;AAClC,KAFuB,CAAxB;AAGAT,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,iBAArB;AACD,GALD,MAKO;AACLP,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB;AACD;AACF,CAXD;AAaAV,GAAG,CAACkB,MAAJ,CAAWrB,IAAX,EAAiB,YAAM;AACrBsB,EAAAA,OAAO,CAACC,GAAR,oDAAwDvB,IAAxD;AACD,CAFD","sourcesContent":["import \"@babel/polyfill\";\nimport 'dotenv/config';\nimport express from 'express';\nimport cors from 'cors';\nimport buildSchedule from './buildSchedule';\n\nconst PORT = process.env.PORT || 3000;\n\nvar app = express();\napp.use(cors());\n\nconst dias = ['segunda', 'terca', 'quarta', 'quinta', 'sexta'];\n\nvar horarios;\nbuildSchedule().then(response => horarios = response);\n\napp.get('/horarios', (req, res) => {\n  res.status(200).send(horarios);\n})\n\napp.get('/horarios/:dia', (req, res) => {\n  var dia = req.params.dia;\n\n  if (dia && dias.includes(dia.toLowerCase())) {\n    var horariosFiltrados = horarios.filter((horario) => {\n      if (horario.horario.dia === dia) return horario;\n    })\n    res.status(200).send(horariosFiltrados);\n  } else {\n    res.status(400).send([]);\n  }\n})\n\napp.listen(PORT, () => {\n  console.log(`[...] Server running at http://localhost:${PORT}`);\n});"],"file":"index.js"}